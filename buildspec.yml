version: 0.2

env:
  variables:
    ECR_REPO_NAME: my-angular-app   # keep lowercase
  exported-variables:
    - ECR_URI
    - REPO_URI
    - IMAGE_TAG

phases:
  pre_build:
    commands:
      - set -euxo pipefail
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REGION="${AWS_REGION:-${AWS_DEFAULT_REGION}}"
      - export ECR_URI="${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com"
      - export REPO_URI="${ECR_URI}/${ECR_REPO_NAME}"
      # short commit SHA for immutable tag
      - export IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}
      - echo "Using tag: ${IMAGE_TAG}"
      - aws ecr get-login-password --region "$REGION" | docker login -u AWS --password-stdin "$ECR_URI"
      # (optional) ensure repo exists
      # - aws ecr describe-repositories --repository-names "${ECR_REPO_NAME}" --region "$REGION" >/dev/null 2>&1 || aws ecr create-repository --repository-name "${ECR_REPO_NAME}" --region "$REGION" >/dev/null
      
  build:
    commands:
      - set -euxo pipefail
      - docker build -t "${ECR_REPO_NAME}:latest" .

  post_build:
    commands:
      - set -euxo pipefail
      # tag & push immutable SHA tag
      - docker tag "${ECR_REPO_NAME}:latest" "${REPO_URI}:${IMAGE_TAG}"
      - docker push "${REPO_URI}:${IMAGE_TAG}"
      # (optional) also keep latest for convenience
      - docker tag "${ECR_REPO_NAME}:latest" "${REPO_URI}:latest"
      - docker push "${REPO_URI}:latest"

      # Generate image definition file for ECS (use SHA tag)
      - printf '[{"name":"%s","imageUri":"%s"}]\n' "my-angular-app" "${REPO_URI}:${IMAGE_TAG}" > imagedefinitions.json
      - echo "== imagedefinitions.json =="
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
